When would you want to use a remote repository rather than keeping all your work local?
To share work with other developers, use multiple development environments, create a backup for your work, and to publish your work to the world.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
You wouldn't want to constantly update if there are collaborators on the project.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are clones that exist on GitHub. Clones are copies of gits that now exist in a new location, but do not connect back to the originator.  Branches are sections of a git that connect back to a common ancestor, are tracked together and can be merged.

What is the benefit of having a copy of the last known state of the remote stored locally?
It is easier to perform merges with the last known state stored locally.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
It woul dbe possible to collaborate on a single document in DropBox or Google Drive.  You wouldn't have to worry about merges, but you also couldn't work very well in parallel.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
If you are deveeloping in parallel or developing for something that you don't want to be live, it is best to use a branch.  Using branches is more complicated, but allows much more flexibility.